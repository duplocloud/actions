name: Execute Terraform
description: Execute a Terraform command
inputs:
  module:
    description: Working directory
    required: true
  workspace:
    description: Terraform workspace
    required: false
    default: default
  command:
    description: Terraform command
    required: true
    default: plan
  parallelism:
    description: Terraform parallelism
    required: false
  config:
    description: Terraform configs
    required: false
    default: config
  var-files:
    description: A list of terraform var files to append to the command. This will be relative to the config directory.
    required: false
runs:
  using: composite
  steps:

  - name: Verify Command
    id: verify-command
    shell: bash
    if: '!contains(fromJSON(''["apply", "destroy", "plan"]''), inputs.command)'
    run: |
      echo "Invalid command: ${{ inputs.command }}"
      echo "Valid commands: apply, destroy, plan"
      exit 1
  
  - name: Setup
    id: setup
    shell: bash
    working-directory: ${{ inputs.module }}
    env:
      TF_WORKSPACE: ${{ inputs.workspace }}
      TF_COMMAND: ${{ inputs.command }}
      TF_PARALLELISM: ${{ inputs.parallelism }}
      MODULE: ${{ inputs.module }}
      CONFIG_DIR: ${{ github.workspace }}/${{ inputs.config }}
    run: $GITHUB_ACTION_PATH/setup.sh
  
  - name: Select Workspace
    id: select-workspace
    shell: bash
    working-directory: ${{ inputs.module }}
    run: terraform workspace select -or-create ${{ inputs.workspace }}
  
  - name: Check if Plan Exists
    id: archived-plan
    continue-on-error: true
    uses: actions/download-artifact@v4
    with:
      name: ${{ env.PLAN_FILE }}
      path: ${{ inputs.module }}
  
  - name: Plan Module
    id: plan
    shell: bash
    working-directory: ${{ inputs.module }}
    if: steps.archived-plan.outcome == 'failure'
    env:
      TF_ARGS: ${{ steps.setup.outputs.args }}
    run: terraform plan $TF_ARGS -out=$PLAN_FILE
  
  - name: Show Plan
    id: show
    shell: bash
    working-directory: ${{ inputs.module }}
    if: |
      steps.archived-plan.outcome == 'success'
    run: terraform show $PLAN_FILE
  
  - name: Archive Plan
    id: archive-plan
    if: |
      steps.archived-plan.outcome == 'failure'
    uses: actions/upload-artifact@v4
    with:
      name: ${{ env.PLAN_FILE }}
      path: ${{ inputs.module }}/${{ env.PLAN_FILE }}
  
  - name: Apply Module Plan
    id: apply
    shell: bash
    working-directory: ${{ inputs.module }}
    if: inputs.command == 'apply' || inputs.command == 'destroy'
    run: terraform apply -input=false -auto-approve $PLAN_FILE
