name: Install TF Dependencies
description: Install Terraform dependencies
inputs:
  tflint_file:
    description: TFLint config file
    required: false 
    default: .tflint.hcl
  tflint_version:
    description: TFLint version
    required: false 
    default: v0.44.1
  terraform_version:
    description: Terraform version
    required: false 
  tf_data_dir:
    description: Module directory
    required: false 
    default: .terraform
  tf_cache_dir:
    description: Terraform cache directory
    required: false 
    default: .terraform.d/plugin-cache
  tflint_cache_dir:
    description: TFLint cache directory
    required: false 
    default: ~/.tflint.d/plugins
runs:
  using: composite
  steps:

  - name: Setup
    id: setup
    shell: bash
    env:
      TF_MODULES: ${{ inputs.module_dir }}
      TF_DATA_DIR: ${{ inputs.tf_data_dir }}
      TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/${{ inputs.tf_cache_dir }}
      LINT_ENABLED: 'true'
      TFLINT_FILE: ${{ inputs.tflint_file }}
      TFRC: ~/.terraformrc
      TF_VERSION: ${{ inputs.terraform_version }}
    run: |
      echo "TF_IN_AUTOMATION=true" >> $GITHUB_ENV
      echo "TF_MODULES=$TF_MODULES" >> $GITHUB_ENV

      # worth a shot, don't share plugin dirs I guess
      # TF_DATA_DIR=$(realpath $TF_DATA_DIR)
      # echo "TF_DATA_DIR=$TF_DATA_DIR" >> $GITHUB_ENV

      # setup terraform rc for cache dir
      echo 'plugin_cache_dir="$HOME/.terraform.d/plugin-cache"' > ~/.terraformrc
      mkdir -p ~/.terraform.d/plugin-cache

      # check if .tflint.hcl file exists
      if [ -f "$TFLINT_FILE" ]; then
        echo "TFLint config file found"
        echo "TFLINT_FILE=$(realpath $TFLINT_FILE)" >> $GITHUB_ENV
      else
        LINT_ENABLED="false"
      fi
      echo "LINT_ENABLED=$LINT_ENABLED" >> $GITHUB_ENV

      # If no version given, try to autodiscover from .terraform-version file
      if [ -z "$TF_VERSION" ]; then
        if [ -f ".terraform-version" ]; then
          TF_VERSION=$(cat .terraform-version)
          echo "Autodiscovered TF_VERSION=$TF_VERSION from .terraform-version file"
        fi
      fi
      echo "TF_VERSION=$TF_VERSION" >> $GITHUB_ENV

  - name: Setup Terraform
    uses: hashicorp/setup-terraform@v3
    with:
      terraform_version: ${{ env.TF_VERSION }}
      
  - name: Setup TFLint
    uses: terraform-linters/setup-tflint@v5
    if: env.LINT_ENABLED == 'true'
    with:
      tflint_version: ${{ inputs.tflint_version }}

  - name: Cache TFlint Plugins
    uses: actions/cache@v4
    if: env.LINT_ENABLED == 'true'
    with:
      path: ${{ inputs.tflint_cache_dir }}
      key: tflint-${{ hashFiles('.tflint.hcl') }}

  - name: Cache TF Data
    id: plugin-cache
    uses: actions/cache@v4
    with:
      path: |
        ~/.terraform.d/plugin-cache
      key: tfcache-${{ hashFiles('**/.terraform.lock.hcl') }}
      restore-keys: |
        tfcache-

  - name: Report
    id: report
    shell: bash
    run: |
      terraform version
      if [ "$LINT_ENABLED" == "true" ]; then
        tflint --version
      fi
